/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NUM 1
#define SYM 2
#define NAV 3

#define BT1 BT_SEL 0
#define BT2 BT_SEL 1
#define BT3 BT_SEL 2
#define BT4 BT_SEL 3
#define BT5 BT_SEL 4
#define BTC BT_CLR

/ {
    // https://zmk.dev/docs/features/conditional-layers
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    behaviors { 
        // tap-preferred
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

// -----------------------------------------------------------------------------------------
// |  0  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  | 10  |  11  |
// | 12  | 13  | 14  | 15  | 16  | 17  |   | 18  | 19  | 20  | 21  | 22  |  23  |
// | 24  | 25  | 26  | 27  | 28  | 29  |   | 30  | 31  | 32  | 33  | 34  |  35  |
//                   | 36  | 37  | 38  |   | 39  | 40  | 41  |
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// | TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BKSP |
// | ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '   |
// | SHFT|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | RET  |
//                   | ESC | NAV | SPC |   | TAB | ENT | RET |
            bindings = <
    &kp TAB   &kp Q &kp W &kp E         &kp R           &kp T       /**/ &kp Y        &kp U           &kp I       &kp O   &kp P    &kp BSPC
    &kp ESC   &kp A &kp S &kp D         &kp F           &kp G       /**/ &kp H        &kp J           &kp K       &kp L   &kp SEMI &kp SQT
    &kp LSHFT &kp Z &kp X &kp C         &kp V           &kp B       /**/ &kp N        &kp M           &kp COMMA   &kp DOT &kp FSLH &kp RET
                          &mt LCTRL ESC &mt LSHFT SPACE &lt NUM TAB /**/ &lt SYM BSPC &mt LSHFT SPACE &lt NAV RET
            >;
        };

        number_layer {
// -----------------------------------------------------------------------------------------
// | TAB |  /  |  7  |  8  |  9  |  .  |   | BT3 |  F7 |  F8 |  F9 | F12 |BLCLR|
// | ESC |  *  |  4  |  5  |  6  |  +  |   | BT2 |  F4 |  F5 |  F6 | F11 | BT5 |
// | SHFT|  0  |  1  |  2  |  3  |  -  |   | BT1 |  F1 |  F2 |  F3 | F10 | BT4 |
//                   | ESC | NAV | SPC |   | TAB | DEL | RET |
            bindings = <
    &kp TAB   &kp FSLH &kp N7 &kp N8 &kp N9 &kp DOT   /**/ &bt BT3 &kp F7 &kp F8 &kp F9 &kp F12 &bt BTC
    &kp ESC   &kp STAR &kp N4 &kp N5 &kp N6 &kp PLUS  /**/ &bt BT2 &kp F4 &kp F5 &kp F6 &kp F11 &bt BT5
    &kp LSHFT &kp N0   &kp N1 &kp N2 &kp N3 &kp MINUS /**/ &bt BT1 &kp F1 &kp F2 &kp F3 &kp F10 &bt BT4
                              &trans &trans &trans    /**/ &trans  &trans &trans
            >;
        };

        symbol_layer {
// -----------------------------------------------------------------------------------------
// | TAB |  !  |  ^  |  #  |  $  |  %  |   |  &  |  Ü  |  *  |  Ö  |  `  | DEL |
// |  `  |  Ä  |  [  |  {  |  (  |  /  |   |  \  |  )  |  }  |  ]  |  _  |  ~  |
// | SHFT|  @  |  ß  |  +  |  =  |  -  |   |  `  |  =  |  -  |  +  | "|" | RET |
//                   | ESC | NAV | SPC |   | TAB | DEL | RET |
            bindings = <
    &kp  TAB  &kp EXCL  &kp CARET &kp HASH &kp DLLR  &kp PRCNT /**/ &kp AMPS  &kp RA(Y) &kp STAR  &kp RA(P) &kp GRAVE &kp DEL
    &kp GRAVE &kp RA(Q) &kp LBKT  &kp LBRC &kp LPAR  &kp FSLH  /**/ &kp BSLH  &kp RPAR  &kp RBRC  &kp RBKT  &kp UNDER &kp TILDE
    &kp LSHFT &kp AT    &kp RA(S) &kp PLUS &kp EQUAL &kp MINUS /**/ &kp GRAVE &kp EQUAL &kp MINUS &kp PLUS  &kp PIPE  &kp RET
                                  &trans   &trans    &trans    /**/ &trans    &trans    &trans
            >;
        };

        navigation_layer {
// -----------------------------------------------------------------------------------------
// | TAB |  <- | C_DN| C_UP|  -> |     |   |     |     |     |     | CPP | DEL |
// |  `  | LFT | DWN |  UP | RGT |     |   |     | HOME|PG_DN|PG_UP| END |     |
// | SHFT| SHFT| CTRL| GUI | LALT| RALT|   | LALT| RALT| LGUI| CTRL| SHFT| RET |
//                   | ESC | NAV | SPC |   | TAB | DEL | RET |
            bindings = <
    &kp TAB   &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &trans   /**/ &trans    &trans   &trans    &trans    &kp C_PP  &kp DEL
    &kp ESC   &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT  &trans   /**/ &kp LSHFT &kp HOME &kp PG_DN &kp PG_UP &kp END   &trans
    &kp LSHFT &kp LSHFT  &kp LCTRL    &kp LGUI     &kp LALT   &kp RALT /**/ &kp LALT  &kp RALT &kp LGUI  &kp LCTRL &kp LSHFT &kp RET
                                      &trans       &trans     &trans   /**/ &trans    &trans   &trans
            >;
        };
    };
};